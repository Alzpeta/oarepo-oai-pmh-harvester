#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Added OAIStats table"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa
from sqlalchemy import types
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8f2b0c2109b1'
down_revision = '9c0ec46a1283'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oarepo_oai_stats',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('provider_id', sa.Integer(), nullable=True),
                    sa.Column('sync_start', sa.TIMESTAMP(), nullable=True),
                    sa.Column('sync_end', sa.TIMESTAMP(), nullable=True),
                    sa.Column('status', sa.String(length=32), nullable=True),
                    sa.Column('logs', sa.String(length=2048), nullable=True),
                    sa.Column('result_json', sa.JSON().with_variant(
                        sqlalchemy_utils.types.json.JSONType(), 'mysql').with_variant(
                        postgresql.JSONB(none_as_null=True, astext_type=types.Text),
                        'postgresql').with_variant(sqlalchemy_utils.types.json.JSONType(),
                                                   'sqlite'), nullable=True),
                    sa.ForeignKeyConstraint(['provider_id'], ['oarepo_oai_provider.id'], name=op.f(
                        'fk_oarepo_oai_stats_provider_id_oarepo_oai_provider')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_oarepo_oai_stats'))
                    )
    # op.create_unique_constraint(op.f('uq_oarepo_oai_mapper_address'), 'oarepo_oai_mapper',
    #                             ['address'])
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_oarepo_oai_mapper_address'), 'oarepo_oai_mapper', type_='unique')
    op.drop_table('oarepo_oai_stats')
    # ### end Alembic commands ###
