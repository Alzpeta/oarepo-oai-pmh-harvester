os: linux
dist: focal
services:
- postgresql
notifications:
  email: false
language: python
matrix:
  fast_finish: true
cache:
- pip
env:
  global:
  - POSTGRESQL_SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://postgres@localhost:5432/invenio"
  - ES7_DOWNLOAD_URL="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-linux-x86_64.tar.gz"
  - ES_HOST=127.0.0.1
  matrix:
  - REQUIREMENTS=release EXTRAS=postgresql,tests ES=$ES7_DOWNLOAD_URL SQLALCHEMY_DATABASE_URI=$POSTGRESQL_SQLALCHEMY_DATABASE_URI
  - REQUIREMENTS=release EXTRAS=sqlite,tests ES=$ES7_DOWNLOAD_URL
python:
- '3.7'
- '3.8'
before_install:
- travis_retry pip install --upgrade pip setuptools py
- travis_retry pip install twine wheel coveralls requirements-builder pip-tools
- requirements-builder --level=pypi -e $EXTRAS setup.py > .travis-release-requirements.in
- pip-compile -U --verbose -o .travis-release-requirements.txt .travis-release-requirements.in
- cat .travis-release-requirements.txt
- mkdir /tmp/elasticsearch
- wget -O - $ES | tar xz --directory=/tmp/elasticsearch --strip-components=1
- "/tmp/elasticsearch/bin/elasticsearch &"
- sleep 10
install:
- travis_retry pip install -r .travis-release-requirements.txt
script:
- "./run-tests.sh"
after_success:
- coveralls
before_deploy:
- |-
  SRCTAG=$(cat oarepo_oai_pmh_harvester/version.py | grep '__version__' | sed 's/__version__//' | sed 's/=//g' | sed 's/"//g' | sed "s/'//g" | sed 's/[ \t\n]//g')
  test $SRCTAG == $TRAVIS_TAG
deploy:
  provider: pypi
  user: __token__
  on:
    tags: true
    branch: master
  distributions: sdist bdist_wheel
  skip_existing: true
  password:
    secure: "V4dqyYyfkYMKG4rc1kh07+u8a0X0OS4++OzjPB8ptj1mG8IqWR1i54XDTKgISwohM08y0sQEcLFf4IU6HKN9FSxZLDsN1aiZwsyOelq/mGxWS4o4Rdal9gdijaapoMOqKsP8DstMZP2pKJTKkXn0Eg6LbSvKFFg/5UAHDfVOfxM3WBvffhRMnbddFbIw+kVzD0FQqznqZ86m+6t6ZENCr8CAm8Vq44ua5bxuo6z7suIb1RJJ+LuvrzGk8rJChRqWWHUyY0qF+uqC7j3fWG674979zyEWSZ9q4/2ojqiJ2X6pgQwzcxKDX7BpZ63MEKmp9LbI2Fg2TGZdDOdHjGnVtoF20OdrTgvKj9YS9OtRV/eA/ygvP+Cx7h6MjEFrV0ZzKXPagPhF/6eZP4TbY8CpCllShliIuTf9XRBNIN76z2K6YQ38hEtySQC5zgqn10ywA6FLkpA3hJH+6uzaj8CeyEuzDk3mc+A1k0sQAZZRxTGzLumuWlzVICryXXfm5nW8+Kz7x1Y0Kygq+SPMakClVhOp+OqOoKp8nvV71NLLE0tPTaTRygFbpBZdAE0qTGvbPDcO5Cu+YV1vm2LvakQZfDJfJH0l0EkN3DCKey0MMxFCB32MlfsKfW1DDGcBGFQwDMHzr0DuaScvmBwV0epZT1Qy6Iz9q0g1dGbOvVGl8Zs="
